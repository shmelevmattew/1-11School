const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const TelegramBot = require('node-telegram-bot-api');
const path = require('path');
require('dotenv').config();

const app = express();
const PORT = process.env.PORT || 3000;

app.use(cors({
  origin: '*',
  methods: ['GET', 'POST'],
  allowedHeaders: ['Content-Type', 'Authorization']
}));
app.use(bodyParser.json());
app.use(express.static(path.join(__dirname, '../')));


const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const TELEGRAM_CHAT_IDS = process.env.TELEGRAM_CHAT_IDS ? process.env.TELEGRAM_CHAT_IDS.split(',') : [];

if (!TELEGRAM_TOKEN || TELEGRAM_TOKEN === 'your_telegram_bot_token') {
  console.warn('‚ö†Ô∏è TELEGRAM_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞.');
}

if (TELEGRAM_CHAT_IDS.length === 0) {
  console.warn('‚ö†Ô∏è TELEGRAM_CHAT_IDS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã. –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∞.');
}

const bot = TELEGRAM_TOKEN && TELEGRAM_TOKEN !== 'your_telegram_bot_token'
  ? new TelegramBot(TELEGRAM_TOKEN, { polling: false })
  : null;

app.post('/api/submit-application', async (req, res) => {
  console.log('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏:', req.body);

  try {
    const { name, phone, message } = req.body;

    if (!name || !phone) {
      console.log('–û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
      return res.status(400).json({ success: false, error: '–ò–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' });
    }

    const telegramMessage =
      `üìù *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ "–®–∫–æ–ª–∞ 1-11"*\n\n` +
      `üë§ *–ò–º—è:* ${name}\n` +
      `üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${phone}\n` +
      `üí¨ *–°–æ–æ–±—â–µ–Ω–∏–µ:* ${message || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}`;

    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...');

    try {
      if (bot && TELEGRAM_CHAT_IDS.length > 0) {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
        for (let chatId of TELEGRAM_CHAT_IDS) {
          await bot.sendMessage(chatId, telegramMessage, { parse_mode: 'Markdown' });
        }
        console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º');
      } else {
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram –æ—Ç–∫–ª—é—á–µ–Ω–∞');
      }

      res.status(200).json({ success: true });
    } catch (telegramError) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', telegramError);
      res.status(500).json({
        success: false,
        error: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram',
        details: telegramError.message
      });
    }
  } catch (error) {
    console.error('–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', error);
    res.status(500).json({
      success: false,
      error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞',
      details: error.message
    });
  }
});

app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, '../index.html'));
});

app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
